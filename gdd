--// Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local plr = Players.LocalPlayer
local Remotes = ReplicatedStorage:WaitForChild("Remotes")

--// Settings
local runningAutofarm = false
local runningUpgrade = false
local runningNextRagdoll = false
local runningRefine = false
local slamDuration = 20
local slamVelocity = 100

--// Freeze/unfreeze
local function setFrozen(char, state)
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if hrp then hrp.Anchored = state end
end

--// Safe teleport character
local function safeTeleport(char, cframeAbove)
    local parts = {}
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            parts[#parts+1] = part
            part.Anchored = true
            part.AssemblyLinearVelocity = Vector3.new()
            part.AssemblyAngularVelocity = Vector3.new()
        end
    end

    for _, part in pairs(parts) do
        part.CFrame = cframeAbove + Vector3.new(math.random(-1,1), 0, math.random(-1,1))
    end

    task.wait(0.3) -- settle physics

    for _, part in pairs(parts) do
        part.Anchored = false
    end
end

--// Fire ragdoll
local function fireRagdollTouch()
    local char = plr.Character
    if not char then return end
    local hrp = char:FindFirstChild("HumanoidRootPart")
    local ragdollPart = workspace:FindFirstChild("RagdollParts") and workspace.RagdollParts:FindFirstChild("RagdollCollission")
    if hrp and ragdollPart then
        local touchInterest = ragdollPart:FindFirstChildOfClass("TouchTransmitter")
        if touchInterest then
            firetouchinterest(hrp, ragdollPart, 0)
            task.wait()
            firetouchinterest(hrp, ragdollPart, 1)
        end
    end
end

--// Autofarm loop
local function autofarmLoop()
    while runningAutofarm do
        local char = plr.Character
        if not char then
            task.wait(1)
        else
            local hrp = char:FindFirstChild("HumanoidRootPart")
            local head = char:FindFirstChild("Head")
            local spawnFolder = workspace:FindFirstChild("Spawn")
            if hrp and head and spawnFolder then
                local targetPart = workspace:GetChildren()[50]
                local teleportTarget = spawnFolder:GetChildren()[84]
                if targetPart and teleportTarget then
                    fireRagdollTouch()
                    local startTime = tick()
                    while tick()-startTime < slamDuration and runningAutofarm do
                        if not (hrp and head and targetPart) then break end
                        local direction = (targetPart.Position - hrp.Position).Unit
                        local velocity = direction * slamVelocity
                        for _, partName in pairs({"HumanoidRootPart","Head","Torso","Left Arm","Right Arm","Left Leg","Right Leg"}) do
                            local part = char:FindFirstChild(partName)
                            if part then
                                part.AssemblyLinearVelocity = velocity + Vector3.new(0,15,0)
                            end
                        end
                        task.wait(0.15)
                    end
                    setFrozen(char,true)
                    safeTeleport(char, teleportTarget.CFrame + Vector3.new(0,10,0))
                    setFrozen(char,false)
                    local oldChar = char
                    repeat task.wait(0.5) until not runningAutofarm or (plr.Character ~= oldChar and plr.Character:FindFirstChild("HumanoidRootPart"))
                    if not runningAutofarm then return end
                    task.wait(1)
                    fireRagdollTouch()
                else
                    task.wait(1)
                end
            else
                task.wait(1)
            end
        end
    end
end

--// Auto upgrade
local function autoUpgradeLoop()
    while runningUpgrade do
        Remotes.PurchaseBoneUpgrade:FireServer("Head")
        Remotes.PurchaseBoneUpgrade:FireServer("Torso")
        Remotes.PurchaseBoneUpgrade:FireServer("Arm")
        Remotes.PurchaseBoneUpgrade:FireServer("Leg")
        task.wait(0.2)
    end
end

--// Auto next ragdoll
local function autoNextRagdollLoop()
    while runningNextRagdoll do
        Remotes.PurchaseNextRagdoll:FireServer()
        task.wait(0.5)
    end
end

--// Auto refine
local function autoRefineLoop()
    while runningRefine do
        Remotes.RefineRagdoll:FireServer()
        task.wait(0.5)
    end
end

--// INTRO LOADING SCREEN
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "IntroGui"
ScreenGui.IgnoreGuiInset = true
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = player:WaitForChild("PlayerGui")

-- Nền hình ảnh
local Background = Instance.new("ImageLabel")
Background.Size = UDim2.new(1, 0, 1, 0)
Background.Position = UDim2.new(0, 0, 0, 0)
Background.BackgroundTransparency = 1
Background.Image = "rbxassetid://IMAGE_ID" -- 👈 thay IMAGE_ID bằng id ảnh nền của bạn
Background.ScaleType = Enum.ScaleType.Crop
Background.Parent = ScreenGui

-- Thanh tải nền
local LoadingBarBack = Instance.new("Frame")
LoadingBarBack.AnchorPoint = Vector2.new(0.5, 0.5)
LoadingBarBack.Position = UDim2.new(0.5, 0, 0.7, 0)
LoadingBarBack.Size = UDim2.new(0.5, 0, 0.05, 0)
LoadingBarBack.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
LoadingBarBack.BackgroundTransparency = 0.2
LoadingBarBack.Parent = Background

local UICornerBack = Instance.new("UICorner")
UICornerBack.CornerRadius = UDim.new(1, 0)
UICornerBack.Parent = LoadingBarBack

-- Thanh tải chính
local LoadingBar = Instance.new("Frame")
LoadingBar.Size = UDim2.new(0, 0, 1, 0)
LoadingBar.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
LoadingBar.Parent = LoadingBarBack

local UICornerFill = Instance.new("UICorner")
UICornerFill.CornerRadius = UDim.new(1, 0)
UICornerFill.Parent = LoadingBar

-- % trong thanh
local PercentLabel = Instance.new("TextLabel")
PercentLabel.AnchorPoint = Vector2.new(0.5, 0.5)
PercentLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
PercentLabel.Size = UDim2.new(1, 0, 1, 0)
PercentLabel.BackgroundTransparency = 1
PercentLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
PercentLabel.TextScaled = true
PercentLabel.Font = Enum.Font.GothamBold
PercentLabel.Parent = LoadingBarBack
PercentLabel.Text = "0%"

-- Chữ tiêu đề
local Title = Instance.new("TextLabel")
Title.AnchorPoint = Vector2.new(0.5, 0.5)
Title.Position = UDim2.new(0.5, 0, 0.4, 0)
Title.Size = UDim2.new(0.6, 0, 0.2, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.Font = Enum.Font.GothamBold
Title.Parent = Background
Title.Text = ""

-- Nội dung chữ
local textToShow = "KMENIN GUI"
local delayPerChar = 0.1

-- Rainbow
local function hsvRainbow(speed)
	local t = tick() * speed
	return Color3.fromHSV((t % 1), 1, 1)
end

for i = 1, #textToShow do
	Title.Text = string.sub(textToShow, 1, i)
	task.wait(delayPerChar)
end

local run = true
task.spawn(function()
	while run do
		Title.TextColor3 = hsvRainbow(0.5)
		task.wait(0.1)
	end
end)

-- Thanh tải + %
local totalTime = 6 -- thời gian intro (giây)
local steps = 100
for i = 1, steps do
	local percent = i / steps
	LoadingBar.Size = UDim2.new(percent, 0, 1, 0)
	PercentLabel.Text = math.floor(percent * 100) .. "%"
	task.wait(totalTime / steps)
end

-- Kết thúc intro
run = false
TweenService:Create(Background, TweenInfo.new(1), {ImageTransparency = 1}):Play()
TweenService:Create(Title, TweenInfo.new(1), {TextTransparency = 1}):Play()
TweenService:Create(LoadingBarBack, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(LoadingBar, TweenInfo.new(1), {BackgroundTransparency = 1}):Play()
TweenService:Create(PercentLabel, TweenInfo.new(1), {TextTransparency = 1}):Play()
task.wait(1.2)
ScreenGui:Destroy()

--// ================================
--// BẮT ĐẦU SCRIPT AUTO FARM (RAYFIELD)
--// ================================

--// UI (Rayfield)
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "by kmenin",
   Icon = 0,
   LoadingTitle = "kmenin gui",
   LoadingSubtitle = "by kmenin",
   ShowText = "Rayfield",
   Theme = "Default",
   ToggleUIKeybind = "K",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil,
      FileName = "Big Hub"
   }
})

Rayfield:Notify({
   Title = "thông báo",
   Content = "chill đi sex có cập nhật🐧",
   Duration = 6.5,
   Image = 4483362458,
})

Rayfield:Notify({
   Title = "thông báo",
   Content = "cảm ơn đã dữ dựng vui lòng nộp tiền🤡👍",
   Duration = 6.5,
   Image = 4483362458,
})

local Tab = Window:CreateTab("chính", 4483362458)
local Section = Tab:CreateSection("Auto Farm")

--// Autofarm toggle
Tab:CreateToggle({
    Name = "tự động farm",
    CurrentValue = false,
    Flag = "AutofarmToggle",
    Callback = function(v)
        runningAutofarm = v
        if v then task.spawn(autofarmLoop) end
    end
})

--// Slam Duration
Tab:CreateSlider({
    Name = "thời gian farm",
    Range = {5,60},
    Increment = 1,
    Suffix = "s",
    CurrentValue = 20,
    Flag = "SlamDuration",
    Callback = function(val)
        slamDuration = val
    end
})

--// Slam Velocity
Tab:CreateSlider({
    Name = "tốc độ farm",
    Range = {50,500},
    Increment = 10,
    Suffix = "vel",
    CurrentValue = 100,
    Flag = "SlamVelocity",
    Callback = function(val)
        slamVelocity = val
    end
})

--// Auto Upgrade Bones
Tab:CreateToggle({
    Name = "Auto nâng cấp Bones",
    CurrentValue = false,
    Flag = "AutoUpgrade",
    Callback = function(v)
        runningUpgrade = v
        if v then task.spawn(autoUpgradeLoop) end
    end
})

--// Auto Next Ragdoll
Tab:CreateToggle({
    Name = "Auto tiếp Ragdoll",
    CurrentValue = false,
    Flag = "AutoNextRagdoll",
    Callback = function(v)
        runningNextRagdoll = v
        if v then task.spawn(autoNextRagdollLoop) end
    end
})

--// Auto Refine
Tab:CreateToggle({
    Name = "Auto Refine",
    CurrentValue = false,
    Flag = "AutoRefine",
    Callback = function(v)
        runningRefine = v
        if v then task.spawn(autoRefineLoop) end
    end
})

Rayfield:LoadConfiguration()
